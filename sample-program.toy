// FIXME: Expression statement no longer works:
// "hi mum!";
var mylist = [123.5, 456, [ "surprise!" ]];
// To test assertions:
// assert_equal(1, 2);
assert_equal(4, 4);
assert_not_equal(1, 2);
assert_null(null);
assert_non_null(1);
// print(mylist);
var mymap = { "mykey": 123, "myotherkey": "myothervalue" };
// Fails due to parser.y setting map entries too early:
// var myval = [ 345.6, {"blah": (42, 3)}, "foo"];
var myval = [ 345.6, {"blah": 42}, "foo"];
fun myfunction() {
    var i = 0;
    return i + 1;
}
var bools = [ true, false, True, False, tRuE, FaLsE ];
var myfunc = fun(formalparam1, formalparam2) { var x = 42; return; };
var sixty = 28 * 2 + 4, noval, bignum = 12345678.9;
var testfunc;
testfunc = fun() { print("In testfunc"); return "test", "comma", "operator", "last"; };
testfunc();
assert_equal(1 + 2 + 3 + 4, 10);
assert_equal((1 + 2) * (3 / 4), 2.25);
assert(not((1 + 2) == (3 / 4)));
assert(!((1 + 2) == (3 / 4)));
var neg = -123.45;
var pos = -67.89 / -1.02;
var eighty = sixty + 20;
if (1 == 2) {
    // print("if1");
    assert(0);
} else if (3 == 4) {
    // print("if2");
    assert(0);
} else {
    // print("else");
    assert(1);
}
;
break;
continue;
var j = 1;
j = j + 1;
for (var count = 0; count < 10; count++, ++count, count--, --count, count = count + 1) {
    if ((count % 2) == 0) {
        print("Even");
    } else {
        print("Odd");
    }
}
var arfle = "arfle";
var barfle;
var tern = (arfle == barfle) ? "yes" : "no";
var i;
{
    var testblock = 1;
    i = 5 ** 3;
}
var bvcserjcbgsrjbgcvrkjrsnbrvcs;
// print(mylist);
var indexed_into_list = mylist[1];
assert_equal(indexed_into_list, 456);
// print(indexed_into_list);
// print(mymap);
var indexed_into_map = mymap["mykey"];
// print(indexed_into_map);
assert_equal(indexed_into_map, 123);
